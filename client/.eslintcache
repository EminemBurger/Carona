[{"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\index.js":"1","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\App.js":"2","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\reportWebVitals.js":"3","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Login.js":"4","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Signup.js":"5","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\store.js":"6","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\setToken.js":"7","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\action\\auth.js":"8","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Home.js":"9","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\authReducer.js":"10","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\constants\\constants.js":"11","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\components\\loginbtn.js":"12","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Forum.js":"13","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Board.js":"14","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\BoardDetail.js":"15","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Mappage.js":"16","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\components\\Map.js":"17","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\components\\Menu.js":"18"},{"size":220,"mtime":1609232975107,"results":"19","hashOfConfig":"20"},{"size":1940,"mtime":1612777669124,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1608180732960,"results":"22","hashOfConfig":"20"},{"size":2803,"mtime":1609669510969,"results":"23","hashOfConfig":"20"},{"size":3178,"mtime":1609751739589,"results":"24","hashOfConfig":"20"},{"size":406,"mtime":1609251490880,"results":"25","hashOfConfig":"20"},{"size":203,"mtime":1609231646353,"results":"26","hashOfConfig":"20"},{"size":2037,"mtime":1609307922156,"results":"27","hashOfConfig":"20"},{"size":2249,"mtime":1609742959180,"results":"28","hashOfConfig":"20"},{"size":1316,"mtime":1609231302438,"results":"29","hashOfConfig":"20"},{"size":300,"mtime":1609214941335,"results":"30","hashOfConfig":"20"},{"size":592,"mtime":1609750781648,"results":"31","hashOfConfig":"20"},{"size":7150,"mtime":1609405643875,"results":"32","hashOfConfig":"20"},{"size":5180,"mtime":1610533071573,"results":"33","hashOfConfig":"20"},{"size":2569,"mtime":1609814238138,"results":"34","hashOfConfig":"20"},{"size":241,"mtime":1615036735126,"results":"35","hashOfConfig":"20"},{"size":2163,"mtime":1615036487317,"results":"36","hashOfConfig":"20"},{"size":548,"mtime":1615037175565,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"t7hp1j",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\index.js",[],["78","79"],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\App.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\reportWebVitals.js",[],["80","81"],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Login.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Signup.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\store.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\setToken.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\action\\auth.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Home.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\authReducer.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\constants\\constants.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\components\\loginbtn.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Forum.js",["82"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport '../App.css'\r\nimport axios from 'axios'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n  }));\r\n  \r\n  function TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\n\r\n  \r\n \r\n  \r\n  const useStyles2 = makeStyles({\r\n    table: {\r\n      minWidth: 500,\r\n      \r\n    },\r\n  });\r\n\r\n\r\n\r\n\r\nexport default function Forum() {\r\n\r\n    const classes = useStyles2();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [rows, setRows] = useState([]);\r\n  \r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n       axios.get('http://localhost:4000/boardapp/:board')\r\n       .then((response) => setRows([...rows, ...response.data]))\r\n       .catch(function(error) { console.log(error)});\r\n \r\n    \r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"wrap\" style ={{display:\"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n            \r\n                <TableContainer component={Paper} style={{marginTop:\"50px\", width: \"1200px\"}}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableHead style ={{backgroundColor:\"skyblue\"}}>\r\n        <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\" style ={{fontWeight:\"bold\", fontSize:\"15px\"}}>\r\n                제목\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 , fontWeight:\"bold\", fontSize:\"15px\"}} align=\"right\">\r\n                글쓴이\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 , fontWeight:\"bold\", fontSize:\"15px\" }} align=\"right\">\r\n                날짜\r\n              </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.title}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n              <Link to={{\r\n                pathname:\"/BoardDetail\",\r\n                state: {\r\n                  title: row.title,\r\n                  username: row.username,\r\n                  content: row.content\r\n                }\r\n              }}\r\n              style={{textDecoration:\"none\"}}>\r\n                {row.title}\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.username}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.createdAt}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 15, 30, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n    <div style={{width:\"1200px\", marginTop:\"15px\"}}>\r\n      <Link to={{\r\n       pathname: \"/Board\",\r\n       state: {\r\n         modify: 0\r\n       }\r\n      }}>\r\n      <Button color=\"primary\" variant=\"contained\" style={{float:\"right\", marginRight:\"10px\"}}>\r\n              글쓰기\r\n      </Button>\r\n      </Link>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Board.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\BoardDetail.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\pages\\Mappage.js",[],"C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\components\\Map.js",["83","84"],"import React , { useEffect } from 'react'\r\nimport Menu from '../components/Menu';\r\nconst { kakao } = window\r\n\r\nexport default function Map() {\r\n    \r\n    useEffect(() => {\r\n        const container = document.getElementById('myMap');\r\n\t\tconst options = {\r\n\t\t\tcenter: new kakao.maps.LatLng(33.450701, 126.570667),\r\n\t\t\tlevel: 3\r\n\t\t};\r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n/*\r\n// 장소 검색 객체를 생성합니다\r\nvar ps = new kakao.maps.services.Places(); \r\n\r\nvar infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n\r\n// 키워드로 장소를 검색합니다\r\nps.keywordSearch('무궁화타운', placesSearchCB); \r\n\r\n\r\n\r\n\r\n// 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\nfunction placesSearchCB (data, status, pagination) {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        var bounds = new kakao.maps.LatLngBounds();\r\n\r\n        for (var i=0; i<data.length; i++) {\r\n            displayMarker(data[i]);    \r\n            bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n        }       \r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n        map.setBounds(bounds);\r\n    } \r\n}\r\n\r\n// 지도에 마커를 표시하는 함수입니다\r\nfunction displayMarker(place) {\r\n    \r\n    // 마커를 생성하고 지도에 표시합니다\r\n    var marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(place.y, place.x) \r\n    });\r\n\r\n    // 마커에 클릭이벤트를 등록합니다\r\n    kakao.maps.event.addListener(marker, 'click', function() {\r\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n        infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n        infowindow.open(map, marker);\r\n    });\r\n\r\n}\r\n*/\r\n    }, [])\r\n    \r\n    return (\r\n        <div id='myMap' style={{\r\n            width: '100%', \r\n            height: '1100px',\r\n        }}></div>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\DLord\\Desktop\\New Project\\carona\\client\\src\\components\\Menu.js",["85","86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":126,"column":8,"nodeType":"96","endLine":126,"endColumn":10,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":12},{"ruleId":"98","severity":1,"message":"102","line":13,"column":15,"nodeType":"100","messageId":"101","endLine":13,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":7,"column":26,"nodeType":"105","messageId":"106","endLine":7,"endColumn":27,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"104","line":7,"column":43,"nodeType":"105","messageId":"106","endLine":7,"endColumn":44,"suggestions":"108"},{"ruleId":"98","severity":1,"message":"109","line":17,"column":11,"nodeType":"100","messageId":"101","endLine":17,"endColumn":18},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rows'. Either include it or remove the dependency array. You can also do a functional update 'setRows(r => ...)' if you only need 'rows' in the 'setRows' call.","ArrayExpression",["112"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'map' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["113","114"],["115","116"],"'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"messageId":"119","fix":"120","desc":"121"},{"messageId":"122","fix":"123","desc":"124"},{"messageId":"119","fix":"125","desc":"121"},{"messageId":"122","fix":"126","desc":"124"},"Update the dependencies array to be: [rows]",{"range":"127","text":"128"},"removeEscape",{"range":"129","text":"130"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"131","text":"132"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"133","text":"130"},{"range":"134","text":"132"},[4071,4073],"[rows]",[170,171],"",[170,170],"\\",[187,188],[187,187]]